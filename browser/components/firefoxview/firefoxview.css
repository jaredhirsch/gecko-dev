/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

 @import url("chrome://global/skin/in-content/common.css");

:root {
  /* override --in-content-page-background from common-shared.css */
  background-color: transparent;
  --fxview-background-color: var(--newtab-background-color, var(--in-content-page-background));
  --fxview-background-color-secondary: var(--newtab-background-color-secondary, #FFFFFF);
  --fxview-element-background-hover: color-mix(in srgb, var(--fxview-background-color) 90%, currentColor);
  --fxview-element-background-active: color-mix(in srgb, var(--fxview-background-color) 80%, currentColor);
  --fxview-text-primary-color: var(--newtab-text-primary-color, var(--in-content-page-color));
  --fxview-text-secondary-color: color-mix(in srgb, currentColor 70%, transparent);
  --fxview-text-color-hover: var(--newtab-text-primary-color);
  --fxview-primary-action-background: var(--newtab-primary-action-background, #0061e0);
  --fxview-border: var(--fc-border-light, #CFCFD8);

  /* ensure utility button hover states match those of the rest of the page */
  /* TODO: again keeping the in-content styles just in case */
  --in-content-button-background-hover: var(--fxview-element-background-hover);
  --in-content-button-background-active: var(--fxview-element-background-active);
  --in-content-button-text-color-hover: var(--fxview-text-color-hover);

  --button-background-color-hover: var(--fxview-element-background-hover);
  --button-background-color-active: var(--fxview-element-background-active);
  --button-text-color-hover: var(--fxview-text-color-hover);

  --fxview-sidebar-width: 288px;
  --fxview-margin-top: 72px;
  --fxview-card-padding-inline: 4px;

  /* copy over newtab background color from activity-stream-[os].css files */
  --newtab-background-color: #F9F9FB;

  --fxview-card-header-font-weight: 500;
}

@media (prefers-color-scheme: dark) {
  :root {
    --fxview-element-background-hover: color-mix(in srgb, var(--fxview-background-color) 80%, white);
    --fxview-element-background-active: color-mix(in srgb, var(--fxview-background-color) 60%, white);
    --fxview-border: #8F8F9D;

    /* copy over newtab colors from activity-stream-[os].css files */
    --newtab-background-color: #2B2A33;
    --newtab-background-color-secondary: #42414d;
    --newtab-primary-action-background: #00ddff;
  }
}

@media (prefers-contrast) {
  :root {
    --fxview-element-background-hover: ButtonText;
    --fxview-element-background-active: ButtonText;
    --fxview-text-color-hover: ButtonFace;
    --fxview-border: var(--fc-border-hcm, -moz-dialogtext);
    --newtab-primary-action-background: LinkText;
    --newtab-background-color: Canvas;
    --newtab-background-color-secondary: Canvas;
  }
}

@media (max-width: 52rem) {
  :root {
    --fxview-sidebar-width: 82px;
  }
}

body {
  display: grid;
  gap: 12px;
  grid-template-columns: var(--fxview-sidebar-width) 1fr;
  background-color: var(--fxview-background-color);
  color: var(--fxview-text-primary-color);
}

.main-container {
  width: 90%;
  margin: 0 auto;
  min-width: 43rem;
  max-width: 71rem;
}

@media (min-width: 120rem) {
  .main-container {
    margin-inline-start: 148px;
  }
}

.page-header {
  margin: 0;
}

fxview-category-button:focus-visible {
  outline-offset: var(--in-content-focus-outline-inset);
}

fxview-category-button[name="recentbrowsing"]::part(icon) {
  background-image: url("chrome://browser/content/firefoxview/category-recentbrowsing.svg");
}
fxview-category-button[name="opentabs"]::part(icon) {
  background-image: url("chrome://browser/content/firefoxview/category-opentabs.svg");
}
fxview-category-button[name="recentlyclosed"]::part(icon) {
  background-image: url("chrome://browser/content/firefoxview/category-recentlyclosed.svg");
}
fxview-category-button[name="syncedtabs"]::part(icon) {
  background-image: url("chrome://browser/content/firefoxview/category-syncedtabs.svg");
}
fxview-category-button[name="history"]::part(icon) {
  background-image: url("chrome://browser/content/firefoxview/category-history.svg");
}

fxview-tab-list.with-dismiss-button::part(secondary-button) {
  background-image: url("chrome://global/skin/icons/close.svg");
}

fxview-tab-list.with-context-menu::part(secondary-button) {
  background-image: url("chrome://global/skin/icons/more.svg");
}

.sticky-container {
  position: sticky;
  top: 0;
  padding-block: var(--fxview-margin-top) 33px;
  z-index: 1;
  display: flex;
  flex-direction: column;
  gap: 35px;
}

.sticky-container.bottom-fade {
  /*
   * padding-inline is doubled to allow for the negative margin below to offset the
   * container so that the box-shadows on the cards are hidden as they pass underneath.
   */
  padding-inline: calc(var(--fxview-card-padding-inline) * 2);
  margin: 0 calc(var(--fxview-card-padding-inline) * -1);

  background:
  linear-gradient(
    to bottom,
    var(--fxview-background-color) 0%,
    var(--fxview-background-color) 95%,
    transparent 100%
  );
  /* When you use HCM or set custom colors, you can't use a gradient. */
  @media (forced-colors) {
    background: var(--fxview-background-color);
  }
}

.cards-container {
  padding-inline: var(--fxview-card-padding-inline);
}

view-opentabs-contextmenu {
  display: contents;
}

/* This should be supported within panel-{item,list} rather than modifying it */
panel-item::part(button) {
  padding-inline-start: 12px;
  cursor: pointer;
}

panel-item::part(button):hover {
  background-color: var(--fxview-element-background-hover);
  color: var(--fxview-text-color-hover);
}

panel-item::part(button):hover:active {
  background-color: var(--fxview-element-background-active);
}

panel-list {
  overflow-y: visible;
}

fxview-category-navigation {
  overflow-y: auto;
}

fxview-category-navigation h1 {
  font-size: 1.6em;
  font-weight: 700;
  margin-block: 0;
}

fxview-empty-state:not([isSelectedTab]) button[slot="primary-action"] {
  margin-inline-start: 0;
  z-index: 1;
}

.card-body > .step-content,
.zap-card > button.close {
  z-index: 1;
}

.setup-step {
  padding: var(--card-padding);
  margin-block: 0.5em 1em;
}

/* Bug 1770534 - Only use the zap-gradient for built-in, color-neutral themes */
.zap-card {
  border: none;
  position: relative;
}
.zap-card::before {
  content: "";
  position: absolute;
  inset: 0;
  border: 1px solid transparent;
  border-radius: 4px;
  background-origin: border-box;
  background-image: var(--card-border-zap-gradient);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
}

.setup-step > h2 {
  margin-block: 0 8px;
}

.setup-step > .card-body {
  margin-block: 8px;
  padding-block: 8px;
}
.setup-step > .card-body > .step-content {
  flex: 1 1 auto;
}

.setup-step > footer {
  display: flex;
  flex-direction: column;
  margin-block: 0 8px;
}

.step-progress {
  background-color: #E0E0E6;
  border-radius: 8px;
  border-style: none;
  height: 8px;
  margin-block: 0 8px;
  margin-inline: 0 2px;
}

.step-progress::-moz-progress-bar {
  background-color: var(--success-fill-color);
  border-radius: 8px;
}

@media (prefers-contrast) {
  .step-progress {
    background-color: SelectedItemText;
    border: 1px solid SelectedItem;
  }

  .step-progress::-moz-progress-bar {
    background-color: SelectedItem;
  }
}

.message-box {
  display: flex;
  align-items: center;
  margin-block: 8px;
  gap: 8px;
}

.message-content {
  flex: 1 1 auto;
}

.message-content > .message-header {
  font-size: 1em;
  margin-block: 0 0.33em;
}

.message-content > .message-description {
  margin-block: 0 0.33em;
}

.confirmation-message-box {
  background-color: var(--success-background-color);
  color: var(--success-box-text-color);
  border-color: var(--success-fill-color);
}
.confirmation-message-box > .message-content {
  text-align: center;
}
.confirmation-message-box > .message-content > .message-header {
  font-size: inherit;
  display: inline;
}
/* ensure we get the local color values as container doesnt change color with theme */
.confirmation-message-box > .icon-button {
  color: inherit;
}
.confirmation-message-box > button.icon-button:enabled:is(:hover, :active) {
  background-color: color-mix(in srgb, var(--success-background-color) 90%, currentColor);
}
@media (prefers-contrast) {
  .confirmation-message-box > button.icon-button {
    border-color: ButtonText;
  }
  .confirmation-message-box > button.icon-button:enabled:is(:hover, :active) {
    background-color: ButtonText;
    color: ButtonFace;
  }
}

#tab-pickup-container {
  grid-row: 1;
}

/* 117px is the total height of the collapsible-tabs-container; setting that size
 for the second row stabilizes the layout so it doesn't shift when collapsibled */
#recently-closed-tabs-container {
  grid-row: var(--recently-closed-tabs-grid-row);
  display: grid;
  grid-template-rows: max-content 117px;
}

#recently-closed-tabs-container > p {
  margin-top: 0;
}

.synced-tabs-container.loading > .card,
.synced-tabs-container.loading > tab-pickup-list,
.synced-tabs-container.loading > .placeholder-content,
.synced-tabs-container:not(.loading) > .loading-content {
  display: none;
}

.synced-tabs-container > .loading-content {
  text-align: center;
  color: var(--fxview-text-secondary-color);
  margin-top: 40px;
  padding: 20px 16px 16px;
}

.closed-tabs-list {
  padding-inline-start: 0;
  margin-block-start: 0;
  display: grid;
  grid-template-columns: min-content repeat(5, 1fr) repeat(2, min-content);
  column-gap: 8px;
  row-gap: 8px;
}

.closed-tab-li {
  display: grid;
  grid-template-columns: subgrid;
  grid-column: span 8;
  margin-block-end: 0.5em;
  border-radius: 4px;
  align-items: center;
}

.closed-tab-li-main {
  display: grid;
  grid-template-columns: subgrid;
  grid-column: span 7;
  padding: 0.5em;
  cursor: pointer;
  align-items: center;
  user-select: none;
  border-radius: 4px;
}

@media (prefers-contrast) {
  span.closed-tab-li-main,
  button.closed-tab-li-dismiss {
    color: ButtonText;
    border-radius: 4px;
    border: 1px solid ButtonText;
  }
}

  .closed-tab-li-main:hover {
    background-color: var(--fxview-element-background-hover);
    color: var(--fxview-text-color-hover);
  }

.closed-tab-li-main:hover .closed-tab-li-title {
  text-decoration-line: underline;
}

.closed-tab-li-main:active {
  background-color: var(--fxview-element-background-active);
  color: var(--fxview-text-color-hover);
}

.closed-tab-li-main:focus-visible {
  box-shadow: none;
  outline: var(--in-content-focus-outline);
  outline-offset: var(--in-content-focus-outline-offset);
  border-radius: 4px;
}

.closed-tab-li-title {
  padding-inline-start: 10px;
  font-weight: 500;
  grid-column: span 3;
  color: currentColor !important;
}

.closed-tab-li-url {
  padding-inline-start: 8px;
  text-decoration-line: underline;
  grid-column: span 2;
  color: var(--fxview-text-secondary-color) !important;
}

.closed-tab-li-time {
  white-space: nowrap;
  text-align: end;
}

.closed-tab-li-dismiss {
  background-image: url("chrome://global/skin/icons/close.svg");
  background-repeat: no-repeat;
  background-position: center;
  background-color: transparent;
  color: var(--fxview-text-secondary-color);
  -moz-context-properties: fill;
  fill: var(--fxview-text-secondary-color);
  min-width: 33px;
  padding: 0.5em;
  margin: 0;
  cursor: pointer;
  user-select: none;
}

.closed-tab-li-dismiss:hover {
  background-color: var(--button-background-color-hover);
  fill: var(--button-text-color-hover);
}

.synced-tab-a,
.synced-tab-a:hover,
.synced-tab-a:active,
.synced-tab-a:hover:active,
.synced-tab-a:visited {
  color: inherit;
  text-decoration: none;
  height: 100%;
}

@media (prefers-contrast) {
  .synced-tab-a {
    border-color: FieldText;
  }
  .synced-tab-a,
  .synced-tab-a:hover,
  .synced-tab-a:active,
  .synced-tab-a:hover:active,
  .synced-tab-a:visited {
    color: LinkText;
  }
  .synced-tab-a:focus-visible {
    box-shadow: none;
    outline: var(--in-content-focus-outline);
    outline-offset: var(--in-content-focus-outline-offset);
  }
}

.closed-tab-li-url,
.closed-tab-li-time,
.synced-tab-li-device,
.synced-tab-li-url,
.synced-tab-li-time {
  font-weight: 400;
  color: var(--fxview-text-secondary-color);
}

.closed-tab-li-title,
.closed-tab-li-url,
.synced-tab-li:not(:first-child) > .synced-tab-a > .synced-tab-li-title,
.synced-tab-li-device {
  overflow: hidden;
}

.closed-tab-li-title,
.synced-tab-li:not(:first-child) > .synced-tab-a > .synced-tab-li-title,
.synced-tab-li-device {
  text-overflow: ellipsis;
  white-space: nowrap;
}

.synced-tab-li-url,
.closed-tab-li-url {
  word-break: break-word;
}

.synced-tabs-list {
  padding: 0;
  margin-block-start: 0;
  list-style: none;
  display: grid;
  grid-template-columns: 4fr 4fr;
  column-gap: 16px;
  row-gap: 8px;

  grid-template-areas:
      "first second"
      "first third";
}

@media only screen and (max-width: 43rem) {
  .synced-tabs-list {
    grid-template-columns: 1fr;
    grid-template-areas:
      "first"
      "second"
      "third";
  }

  body {
    flex-flow: column;
  }

  #logo-container .brand-logo {
    justify-content: center;
  }
}

.synced-tab-a,
.synced-tab-li-placeholder {
  box-sizing: border-box;
  border-radius: 4px;
  padding: 7px;
  display: grid;
  column-gap: 8px;
  row-gap: 2px;
  align-items: center;
  grid-template-columns: min-content repeat(2, 1fr) minmax(min-content, auto);
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "favicon title title title"
    "favicon domain domain domain"
    "favicon device device time";
}

.synced-tab-a:hover {
  box-shadow: 0px 2px 14px var(--fxview-contrast-border);
}

.synced-tab-li:not(:first-child) > .synced-tab-a {
  align-content: center;
}

@media only screen and (max-width: 60rem) {
  .synced-tab-li > .synced-tab-a,
  .synced-tab-li-placeholder {
    grid-template-areas:
      "favicon title title title"
      "favicon domain domain domain"
      "favicon device device device";
  }
  .synced-tab-li:not(:first-child) > .synced-tab-a > .synced-tab-li-time {
    display: none;
  }
}

.synced-tab-li-placeholder {
  row-gap: 1em;
  grid-template-areas:
    "favicon title title title"
    "favicon domain domain domain";
  grid-template-rows: auto auto;
}

.li-placeholder-favicon {
  grid-area: favicon;
  align-self: start;
  width: 16px;
  height: 16px;
}

.li-placeholder-title {
  grid-area: title;
  height: .8em;
  margin-block: .1em; /* simulate line-height */
  width: 100%;
}

.li-placeholder-domain {
  grid-area: domain;
  height: .6em;
  margin-block: .1em; /* simulate line-height */
  width: 100%;
}

.li-placeholder-favicon,
.li-placeholder-title,
.li-placeholder-domain {
  display: inline-block;
  background-color: currentColor; opacity: 0.08;
  border-radius: 4px;
}

.synced-tab-li:first-child {
  grid-area: first;
}

.synced-tab-li:first-child > .synced-tab-a {
  padding: 15px;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: auto auto 1fr auto;
  grid-template-areas:
    "favicon badge badge badge"
    "title title title title"
    "domain domain domain domain"
    "device device device time";
  row-gap: 4px;
}

.synced-tab-li:nth-child(2) {
  grid-area: second;
}

.synced-tab-li:nth-child(3) {
  grid-area: third;
}

.synced-tab-li-url,
.synced-tab-li-device,
.synced-tab-li:not(:first-child) > .synced-tab-a > .synced-tab-li-title {
  font-size: .85em;
}

.synced-tab-li-time {
  font-size: .75em;
}

.synced-tab-li-url {
  text-decoration-line: underline;
  grid-area: domain;
  align-self: start;
}

.synced-tab-li-title {
  grid-area: title;
  font-weight: 500;
}

.synced-tab-li:first-child > .synced-tab-a > .synced-tab-li-title {
  color: inherit;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  align-self: start;
}

.synced-tab-li-device {
  grid-area: device;
}

.synced-tab-li-time {
  grid-area: time;
  justify-self: end;
  align-self: end;
  white-space: nowrap;
}

.synced-tab-li:first-child > .synced-tab-a > .synced-tab-li-time {
  align-self: center;
}

.synced-tab-li .favicon {
  grid-area: favicon;
  align-self: start;
}

@media (prefers-contrast) {
  .synced-tab-li .favicon {
    color: LinkText;
  }
}

.synced-tab-li .icon {
  vertical-align: bottom;
  margin-inline-end: 5px;
}

.icon {
  background-position: center center;
  background-repeat: no-repeat;
  display: inline-block;
  -moz-context-properties: fill;
  fill: currentColor;
}

.history {
  background-image: url('chrome://browser/skin/history.svg');
}

.phone {
  background-image: url('chrome://browser/skin/device-phone.svg');
}

.desktop {
  background-image: url('chrome://browser/skin/device-desktop.svg');
}

.tablet {
  background-image: url('chrome://browser/skin/device-tablet.svg');
}

.synced-tabs {
  background-image: url('chrome://browser/skin/synced-tabs.svg');
}

.info {
  background-image: url('chrome://global/skin/icons/info-filled.svg');
}

.error-state > .info {
  vertical-align: text-top;
  margin-inline-end: 7px;
  margin-top: 1px;
  color: var(--info-icon-background-color);
}

.favicon {
  background-size: cover;
  -moz-context-properties: fill;
  fill: currentColor;
}

.favicon, .icon, .synced-tab-li-favicon {
  width: 16px;
  height: 16px;
}

.sync {
  background-image: url(chrome://browser/skin/sync.svg);
  background-size: cover;
  height: 19px;
  width: 19px;
  color: var(--fxview-text-secondary-color);
}

@keyframes syncRotate {
  from { transform: rotate(0); }
  to { transform: rotate(360deg); }
}

@media (prefers-reduced-motion: no-preference) {
  .sync {
    animation: syncRotate 0.8s linear infinite;
  }
}

.last-active-badge {
  height: 1.25em;
  background-color: #E3FFF3;
  grid-area: badge;
  border-radius: 2em;
  justify-self: end;
  text-align: center;
  padding: 0.3em 1em;
  font-size: 0.75em;
}

.synced-tab-li:not(:first-child) .last-active-badge {
  display: none;
}

.dot {
  height: 8px;
  width: 8px;
  background-color: var(--success-fill-color);
  border-radius: 50%;
  display: inline-block;
}

.badge-text {
  font-weight: 400;
  letter-spacing: 0.02em;
  margin-inline-start: 4px;
  color: #000000;
}

@media (prefers-contrast) {
  .last-active-badge {
    border: 1px solid CanvasText;
    background-color: Canvas;
  }
  .dot {
    background-color: FieldText;
  }
  .badge-text {
    color: FieldText;
  }
}
