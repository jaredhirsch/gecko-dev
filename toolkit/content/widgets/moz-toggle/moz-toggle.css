/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

@import url("chrome://global/skin/design-system/text-and-typography.css");

:host {
  --toggle-background-color: var(--button-background-color);
  --toggle-background-color-hover: var(--button-background-color-hover);
  --toggle-background-color-active: var(--button-background-color-active);
  --toggle-background-color-disabled: var(--button-background-color-disabled);

  --toggle-background-color-pressed: var(--button-background-color-primary);
  --toggle-background-color-pressed-hover: var(--button-background-color-primary-hover);
  --toggle-background-color-pressed-active: var(--button-background-color-primary-active);
  --toggle-background-color-pressed-disabled: var(--button-background-color-primary-disabled);

  --toggle-border-color: var(--border-interactive-color);
  --toggle-border-color-hover: var(--border-interactive-color-hover);
  --toggle-border-color-active: var(--border-interactive-color-active);
  --toggle-border-color-disabled: var(--border-interactive-color-disabled);

  --toggle-border-color-pressed: var(--button-border-color-primary);
  --toggle-border-color-pressed-hover: var(--button-border-color-primary-hover);
  --toggle-border-color-pressed-active: var(--button-border-color-primary-active);
  --toggle-border-color-pressed-disabled: var(--button-border-color-primary-disabled);

  --toggle-dot-background-color: var(--toggle-border-color);
  --toggle-dot-background-color-hover: var(--toggle-border-color-hover);
  --toggle-dot-background-color-active: var(--toggle-border-color-active);
  --toggle-dot-background-color-disabled: var(--toggle-border-color-disabled);

  --toggle-dot-background-color-pressed: var(--button-text-color-primary);
  --toggle-dot-background-color-pressed-hover: var(--button-text-color-primary);
  --toggle-dot-background-color-pressed-active: var(--button-text-color-primary);
  --toggle-dot-background-color-pressed-disabled: var(--button-text-color-primary);

  --toggle-opacity-disabled: var(--button-opacity-disabled);

  --toggle-border-radius: var(--border-radius-circle);
  --toggle-border-width: var(--border-width);
  --toggle-height: var(--size-item-small);
  --toggle-width: var(--size-item-large);
  --toggle-dot-margin: 1px;
  --toggle-dot-height: calc(var(--toggle-height) - 2 * var(--toggle-dot-margin) - 2 * var(--toggle-border-width));
  --toggle-dot-width: var(--toggle-dot-height);
  --toggle-dot-transform-x: calc(var(--toggle-width) - 4 * var(--toggle-dot-margin) - var(--toggle-dot-width));
}

:host {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

::slotted(a[is="moz-support-link"]) {
  display: inline-block;
}

#moz-toggle-label {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 8px;
}

.description-wrapper,
.description-wrapper ::slotted([slot="support-link"]) {
  margin: 0;
}

.toggle-button {
  appearance: none;
  color: var(--button-text-color);
  padding: 0;
  margin: 0;
  border: var(--toggle-border-width) solid var(--toggle-border-color);
  height: var(--toggle-height);
  width: var(--toggle-width);
  border-radius: var(--toggle-border-radius);
  background: var(--toggle-background-color);
  box-sizing: border-box;
  flex-shrink: 0;

  &::before {
    display: block;
    content: "";
    background-color: var(--toggle-dot-background-color);
    height: var(--toggle-dot-height);
    width: var(--toggle-dot-width);
    margin: var(--toggle-dot-margin);
    border-radius: var(--toggle-border-radius);
    translate: 0;
  }

  &:focus-visible {
    outline: var(--focus-outline);
    outline-offset: var(--focus-outline-offset);
  }

  &:enabled {
    &:hover {
      background: var(--toggle-background-color-hover);
      border-color: var(--toggle-border-color-hover);
    }

    &:active {
      background: var(--toggle-background-color-active);
      border-color: var(--toggle-border-color-active);
    }
  }

  &:disabled {
    background-color: var(--toggle-background-color-disabled);
    border-color: var(--toggle-border-color-disabled);
    opacity: var(--toggle-opacity-disabled);
  }
}

.toggle-button[aria-pressed="true"] {
  background: var(--toggle-background-color-pressed);
  border-color: var(--toggle-border-color-pressed);

  &::before {
    translate: var(--toggle-dot-transform-x);
    background-color: var(--toggle-dot-background-color-pressed);

    &:-moz-locale-dir(rtl),
    &:dir(rtl) {
      translate: calc(-1 * var(--toggle-dot-transform-x));
    }
  }

  &:enabled {
    &:hover {
      background: var(--toggle-background-color-pressed-hover);
      border-color: var(--toggle-border-color-pressed-hover);
    }

    &:active {
      background: var(--toggle-background-color-pressed-active);
      border-color: var(--toggle-border-color-pressed-active);
    }
  }

  &:disabled {
    background-color: var(--toggle-background-color-pressed-disabled);
    border-color: var(--toggle-border-color-pressed-disabled);
  }
}

@media (prefers-reduced-motion: no-preference) {
  .toggle-button::before {
    transition: translate 100ms;
  }
}
